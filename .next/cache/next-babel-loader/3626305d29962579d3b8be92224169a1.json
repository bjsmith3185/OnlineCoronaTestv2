{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brian Smith\\\\Desktop\\\\My_Projects\\\\CoronaTestv2\\\\OnlineCoronaTestv2\\\\components\\\\Symptoms.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { render } from \"react-dom\";\n\nvar Symptoms = /*#__PURE__*/function (_React$Component) {\n  _inherits(Symptoms, _React$Component);\n\n  var _super = _createSuper(Symptoms);\n\n  function Symptoms(props) {\n    var _this;\n\n    _classCallCheck(this, Symptoms);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"banner\", function () {\n      // console.log(\"checking index: \" = this.state.index)\n      if (_this.state.index > 10) {\n        console.log(\"index is > 10\");\n\n        _this.setState({\n          index: 0\n        });\n      }\n\n      setTimeout(_this.increment(_this.state.index), 3000);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"increment\", function (value) {\n      console.log(\"value : \" + value);\n\n      _this.setState({\n        index: value + 1\n      });\n    });\n\n    _this.state = {\n      symptomList: [\"Sore Throat.\", \"Fatigue.\", \"Hungry for pizza.\", \"Tired of being home.\", \"Body aches.\", \"Empty Wallet.\", \"Sleepy\", \"TBD symptom\", \"Face mask tan\", \"Long hair or mullet\", \"Feeling hot outside\"],\n      index: 0\n    };\n    return _this;\n  }\n\n  _createClass(Symptoms, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // while ( 1<4 ) {\n      //     setTimeout(() => {\n      //     if ( this.state.theIndex > 10 ) {\n      //         this.setState({theIndex: 0})\n      //     } else {\n      //         this.setState({theIndex: theIndex++})\n      //     }\n      // },3000)\n      // }\n      this.banner();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, \"New Side Effects Include..\"), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, this.state.symptomList[this.state.index]));\n    }\n  }]);\n\n  return Symptoms;\n}(React.Component);\n\nexport default Symptoms;","map":{"version":3,"sources":["C:/Users/Brian Smith/Desktop/My_Projects/CoronaTestv2/OnlineCoronaTestv2/components/Symptoms.js"],"names":["render","Symptoms","props","state","index","console","log","setState","setTimeout","increment","value","symptomList","banner","React","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,MAAT,QAAuB,WAAvB;;IAEMC,Q;;;;;AAGF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,6DAuCV,YAAM;AACZ;AACC,UAAK,MAAKC,KAAL,CAAWC,KAAX,GAAmB,EAAxB,EAA6B;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,cAAKC,QAAL,CAAc;AAACH,UAAAA,KAAK,EAAE;AAAR,SAAd;AACH;;AAEDI,MAAAA,UAAU,CAAC,MAAKC,SAAL,CAAe,MAAKN,KAAL,CAAWC,KAA1B,CAAD,EAAkC,IAAlC,CAAV;AAEH,KAhDkB;;AAAA,gEAkDP,UAACM,KAAD,EAAW;AACnBL,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaI,KAAzB;;AACA,YAAKH,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAEM,KAAK,GAAG;AAAhB,OAAd;AACH,KArDkB;;AAGf,UAAKP,KAAL,GAAa;AACTQ,MAAAA,WAAW,EAAG,CACV,cADU,EAEV,UAFU,EAGV,mBAHU,EAIV,sBAJU,EAKV,aALU,EAMV,eANU,EAOV,QAPU,EAQV,aARU,EASV,eATU,EAUV,qBAVU,EAWV,qBAXU,CADL;AAcTP,MAAAA,KAAK,EAAE;AAdE,KAAb;AAHe;AAoBlB;;;;wCAEmB;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,WAAKQ,MAAL;AAGH;;;6BAoBI;AAGL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKT,KAAL,CAAWQ,WAAX,CAAuB,KAAKR,KAAL,CAAWC,KAAlC,CAAN,CAHJ,CADJ;AAYH;;;;EA3EsBS,KAAK,CAACC,S;;AAgF7B,eAAeb,QAAf","sourcesContent":["import { render } from \"react-dom\";\r\n\r\nclass Symptoms extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            symptomList : [\r\n                \"Sore Throat.\",\r\n                \"Fatigue.\",\r\n                \"Hungry for pizza.\",\r\n                \"Tired of being home.\",\r\n                \"Body aches.\",\r\n                \"Empty Wallet.\",\r\n                \"Sleepy\",\r\n                \"TBD symptom\",\r\n                \"Face mask tan\",\r\n                \"Long hair or mullet\",\r\n                \"Feeling hot outside\"\r\n            ],\r\n            index: 0\r\n        }\r\n       \r\n    }\r\n  \r\n    componentDidMount() {\r\n\r\n        // while ( 1<4 ) {\r\n        //     setTimeout(() => {\r\n        //     if ( this.state.theIndex > 10 ) {\r\n        //         this.setState({theIndex: 0})\r\n        //     } else {\r\n        //         this.setState({theIndex: theIndex++})\r\n        //     }\r\n            \r\n        // },3000)\r\n        // }\r\n        this.banner();\r\n\r\n\r\n    }\r\n\r\n    banner = () => {\r\n       // console.log(\"checking index: \" = this.state.index)\r\n        if ( this.state.index > 10 ) {\r\n            console.log(\"index is > 10\")\r\n            this.setState({index: 0})\r\n        } \r\n\r\n        setTimeout(this.increment(this.state.index),3000)\r\n\r\n    }\r\n\r\n    increment = (value) => {\r\n        console.log(\"value : \" + value)\r\n        this.setState({index: value + 1})\r\n    }\r\n\r\n\r\n\r\nrender() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p>New Side Effects Include..</p>\r\n\r\n            <div>{this.state.symptomList[this.state.index]}</div>\r\n\r\n        </div>\r\n    )\r\n        \r\n\r\n\r\n\r\n}\r\n\r\n\r\n}\r\n\r\nexport default Symptoms;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}