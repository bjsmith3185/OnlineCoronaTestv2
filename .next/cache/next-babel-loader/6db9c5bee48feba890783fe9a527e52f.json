{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian Smith\\\\Desktop\\\\My_Projects\\\\CoronaTestv2\\\\OnlineCoronaTestv2\\\\components\\\\Symptoms.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { render } from \"react-dom\";\n\nclass Symptoms extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"myIndex\", () => {\n      if (this.index > this.symptomList.length() - 1) {\n        this.index = 0;\n      } else {\n        this.index++;\n      }\n    });\n\n    _defineProperty(this, \"findSymptom\", () => {\n      while (1 < 2) {\n        setTimeout(this.myIndex(), 3000);\n      }\n\n      return this.symptomList[this.index];\n    });\n\n    this.symptomList = [\"Sore Throat.\", \"Fatigue.\", \"Hungry for pizza.\", \"Tired of being home.\", \"Body aches.\", \"Empty Wallet.\", \"Sleepy\", \"TBD symptom\", \"Face mask tan\", \"Long hair or mullet\", \"Feeling hot outside\"];\n    this.index = 0;\n  } // condition = true;\n  // while () {\n  //     setTimeout(myIndex(), 3000);\n  // }\n\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"New Side Effects Include..\"), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, this.symptomList[this.index]), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, this.findSymptom()));\n  }\n\n}\n\nexport default Symptoms;","map":{"version":3,"sources":["C:/Users/Brian Smith/Desktop/My_Projects/CoronaTestv2/OnlineCoronaTestv2/components/Symptoms.js"],"names":["render","Symptoms","React","Component","constructor","props","index","symptomList","length","setTimeout","myIndex","findSymptom"],"mappings":";;;;;;AAAA,SAASA,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,QAAN,SAAuBC,KAAK,CAACC,SAA7B,CAAuC;AAGnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,qCA6BT,MAAM;AACZ,UAAK,KAAKC,KAAL,GAAc,KAAKC,WAAL,CAAiBC,MAAjB,KAA2B,CAA9C,EAAmD;AAC/C,aAAKF,KAAL,GAAa,CAAb;AACH,OAFD,MAEO;AACH,aAAKA,KAAL;AACH;AACJ,KAnCkB;;AAAA,yCAqCL,MAAM;AAChB,aAAO,IAAI,CAAX,EAAc;AACVG,QAAAA,UAAU,CAAC,KAAKC,OAAL,EAAD,EAAiB,IAAjB,CAAV;AACH;;AAED,aAAO,KAAKH,WAAL,CAAiB,KAAKD,KAAtB,CAAP;AACH,KA3CkB;;AAGf,SAAKC,WAAL,GAAmB,CACf,cADe,EAEf,UAFe,EAGf,mBAHe,EAIf,sBAJe,EAKf,aALe,EAMf,eANe,EAOf,QAPe,EAQf,aARe,EASf,eATe,EAUf,qBAVe,EAWf,qBAXe,CAAnB;AAeA,SAAKD,KAAL,GAAa,CAAb;AAEH,GAvBkC,CAyBnC;AAEA;AACA;AACA;;;AAoBJN,EAAAA,MAAM,GAAG;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKO,WAAL,CAAiB,KAAKD,KAAtB,CAAN,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKK,WAAL,EAAN,CAJJ,CADJ;AAYH;;AAhEsC;;AAqEvC,eAAeV,QAAf","sourcesContent":["import { render } from \"react-dom\";\r\n\r\nclass Symptoms extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.symptomList = [\r\n            \"Sore Throat.\",\r\n            \"Fatigue.\",\r\n            \"Hungry for pizza.\",\r\n            \"Tired of being home.\",\r\n            \"Body aches.\",\r\n            \"Empty Wallet.\",\r\n            \"Sleepy\",\r\n            \"TBD symptom\",\r\n            \"Face mask tan\",\r\n            \"Long hair or mullet\",\r\n            \"Feeling hot outside\"\r\n        ];\r\n\r\n\r\n        this.index = 0;\r\n        \r\n    }\r\n  \r\n    // condition = true;\r\n\r\n    // while () {\r\n    //     setTimeout(myIndex(), 3000);\r\n    // }\r\n    \r\n\r\n    myIndex = () => {\r\n        if ( this.index > (this.symptomList.length() -1) ) {\r\n            this.index = 0;\r\n        } else {\r\n            this.index++;\r\n        }\r\n    }\r\n\r\n    findSymptom = () => {\r\n        while (1 < 2) {\r\n            setTimeout(this.myIndex(), 3000);\r\n        }\r\n\r\n        return this.symptomList[this.index];\r\n    }\r\n\r\n\r\nrender() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p>New Side Effects Include..</p>\r\n\r\n            <div>{this.symptomList[this.index]}</div>\r\n            <div>{this.findSymptom()}</div>\r\n        </div>\r\n    )\r\n        \r\n\r\n\r\n\r\n}\r\n\r\n\r\n}\r\n\r\nexport default Symptoms;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}