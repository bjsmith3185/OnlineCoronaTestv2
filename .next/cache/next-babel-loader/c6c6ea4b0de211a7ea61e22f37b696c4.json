{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brian Smith\\\\Desktop\\\\My_Projects\\\\CoronaTestv2\\\\OnlineCoronaTestv2\\\\components\\\\Symptoms.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { render } from \"react-dom\";\n\nvar Symptoms = /*#__PURE__*/function (_React$Component) {\n  _inherits(Symptoms, _React$Component);\n\n  var _super = _createSuper(Symptoms);\n\n  function Symptoms(props) {\n    var _this;\n\n    _classCallCheck(this, Symptoms);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"findSymptom\", function () {\n      while (1 < 2) {\n        setTimeout(function () {\n          if (_this.index > 10) {\n            _this.index = 0;\n          } else {\n            _this.index++;\n          }\n        }, 3000);\n      }\n\n      return _this.symptomList[_this.index];\n    });\n\n    _this.symptomList = [\"Sore Throat.\", \"Fatigue.\", \"Hungry for pizza.\", \"Tired of being home.\", \"Body aches.\", \"Empty Wallet.\", \"Sleepy\", \"TBD symptom\", \"Face mask tan\", \"Long hair or mullet\", \"Feeling hot outside\"];\n    _this.index = 0;\n    return _this;\n  } // condition = true;\n  // while () {\n  //     setTimeout(myIndex(), 3000);\n  // }\n  // myIndex = () => {\n  //     if ( this.index > (this.symptomList.length() -1) ) {\n  //         this.index = 0;\n  //     } else {\n  //         this.index++;\n  //     }\n  // }\n\n\n  _createClass(Symptoms, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, \"New Side Effects Include..\"), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, this.symptomList[this.index]), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, this.findSymptom()));\n    }\n  }]);\n\n  return Symptoms;\n}(React.Component);\n\nexport default Symptoms;","map":{"version":3,"sources":["C:/Users/Brian Smith/Desktop/My_Projects/CoronaTestv2/OnlineCoronaTestv2/components/Symptoms.js"],"names":["render","Symptoms","props","setTimeout","index","symptomList","findSymptom","React","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,MAAT,QAAuB,WAAvB;;IAEMC,Q;;;;;AAGF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,kEAqCL,YAAM;AAChB,aAAO,IAAI,CAAX,EAAc;AACVC,QAAAA,UAAU,CAAC,YAAM;AACb,cAAK,MAAKC,KAAL,GAAa,EAAlB,EAAuB;AACnB,kBAAKA,KAAL,GAAa,CAAb;AACH,WAFD,MAEO;AACH,kBAAKA,KAAL;AACH;AACJ,SANS,EAMP,IANO,CAAV;AAOH;;AAED,aAAO,MAAKC,WAAL,CAAiB,MAAKD,KAAtB,CAAP;AACH,KAjDkB;;AAGf,UAAKC,WAAL,GAAmB,CACf,cADe,EAEf,UAFe,EAGf,mBAHe,EAIf,sBAJe,EAKf,aALe,EAMf,eANe,EAOf,QAPe,EAQf,aARe,EASf,eATe,EAUf,qBAVe,EAWf,qBAXe,CAAnB;AAeA,UAAKD,KAAL,GAAa,CAAb;AAlBe;AAoBlB,G,CAED;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;6BAiBK;AAGL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKC,WAAL,CAAiB,KAAKD,KAAtB,CAAN,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKE,WAAL,EAAN,CAJJ,CADJ;AAYH;;;;EAtEsBC,KAAK,CAACC,S;;AA2E7B,eAAeP,QAAf","sourcesContent":["import { render } from \"react-dom\";\r\n\r\nclass Symptoms extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.symptomList = [\r\n            \"Sore Throat.\",\r\n            \"Fatigue.\",\r\n            \"Hungry for pizza.\",\r\n            \"Tired of being home.\",\r\n            \"Body aches.\",\r\n            \"Empty Wallet.\",\r\n            \"Sleepy\",\r\n            \"TBD symptom\",\r\n            \"Face mask tan\",\r\n            \"Long hair or mullet\",\r\n            \"Feeling hot outside\"\r\n        ];\r\n\r\n\r\n        this.index = 0;\r\n        \r\n    }\r\n  \r\n    // condition = true;\r\n\r\n    // while () {\r\n    //     setTimeout(myIndex(), 3000);\r\n    // }\r\n    \r\n\r\n    // myIndex = () => {\r\n    //     if ( this.index > (this.symptomList.length() -1) ) {\r\n    //         this.index = 0;\r\n    //     } else {\r\n    //         this.index++;\r\n    //     }\r\n    // }\r\n\r\n    findSymptom = () => {\r\n        while (1 < 2) {\r\n            setTimeout(() => {\r\n                if ( this.index > 10 ) {\r\n                    this.index = 0;\r\n                } else {\r\n                    this.index++;\r\n                }\r\n            }, 3000);\r\n        }\r\n\r\n        return this.symptomList[this.index];\r\n    }\r\n\r\n\r\nrender() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p>New Side Effects Include..</p>\r\n\r\n            <div>{this.symptomList[this.index]}</div>\r\n            <div>{this.findSymptom()}</div>\r\n        </div>\r\n    )\r\n        \r\n\r\n\r\n\r\n}\r\n\r\n\r\n}\r\n\r\nexport default Symptoms;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}