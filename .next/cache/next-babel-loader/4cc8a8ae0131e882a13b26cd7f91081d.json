{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brian Smith\\\\Desktop\\\\My_Projects\\\\CoronaTest\\\\CoronaTest\\\\components\\\\Cases.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { render } from \"react-dom\";\n\nvar Cases = /*#__PURE__*/function (_React$Component) {\n  _inherits(Cases, _React$Component);\n\n  var _super = _createSuper(Cases);\n\n  function Cases() {\n    var _this;\n\n    _classCallCheck(this, Cases);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      byState: \"NC\"\n    });\n\n    return _this;\n  }\n\n  _createClass(Cases, [{\n    key: \"render\",\n    value: function render() {\n      var list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      }, __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 15\n        }\n      }, \"Stats for North Carolina as of: \", this.props[\"case\"].lastUpdateEt, \".\")), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }\n      }, __jsx(\"span\", {\n        className: \"badge badge-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 16\n        }\n      }, \"Positive cases: \", this.props[\"case\"].positive, \".\")), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, __jsx(\"span\", {\n        className: \"badge badge-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 16\n        }\n      }, \"Negative cases: \", this.props[\"case\"].negative, \".\")), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }, __jsx(\"span\", {\n        className: \"badge badge-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }\n      }, \"Hospitalized cases: \", this.props[\"case\"].hospitalizedCurrently, \".\")), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, __jsx(\"span\", {\n        className: \"badge badge-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }\n      }, \"Recovered cases: \", this.props[\"case\"].recovered, \".\")));\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      }, __jsx(\"ul\", {\n        className: \"list-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, list));\n    }\n  }]);\n\n  return Cases;\n}(React.Component);\n\nexport default Cases;","map":{"version":3,"sources":["C:/Users/Brian Smith/Desktop/My_Projects/CoronaTest/CoronaTest/components/Cases.js"],"names":["render","Cases","byState","list","props","lastUpdateEt","positive","negative","hospitalizedCurrently","recovered","React","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,MAAT,QAAuB,WAAvB;;IAEMC,K;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,OAAO,EAAE;AADH,K;;;;;;;6BAIC;AAEP,UAAIC,IAAI,GACJ;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAyC,KAAKC,KAAL,SAAgBC,YAAzD,MADJ,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAuD,KAAKD,KAAL,SAAgBE,QAAvE,MAAL,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAsD,KAAKF,KAAL,SAAgBG,QAAtE,MAAL,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA2D,KAAKH,KAAL,SAAgBI,qBAA3E,MADJ,CAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwD,KAAKJ,KAAL,SAAgBK,SAAxE,MADJ,CAVF,CADJ;;AAkBA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BN,IAA5B,CADF,CADF;AAKD;;;;EA9BiBO,KAAK,CAACC,S;;AAiC1B,eAAeV,KAAf","sourcesContent":["import { render } from \"react-dom\";\r\n\r\nclass Cases extends React.Component {\r\n  state = {\r\n    byState: \"NC\",\r\n  };\r\n\r\n  render() {\r\n\r\n    let list = (\r\n        <li className=\"list-group-item\">\r\n          <div>\r\n              <strong>Stats for North Carolina as of: {this.props.case.lastUpdateEt}.</strong>\r\n            \r\n          </div>\r\n          <div><span className=\"badge badge-success\">Positive cases: {this.props.case.positive}.</span></div>\r\n          <div><span className=\"badge badge-danger\">Negative cases: {this.props.case.negative}.</span></div>\r\n          <div>\r\n              <span className=\"badge badge-warning\">Hospitalized cases: {this.props.case.hospitalizedCurrently}.</span>\r\n          </div>\r\n          <div>\r\n              <span className=\"badge badge-warning\">Recovered cases: {this.props.case.recovered}.</span>\r\n          </div>\r\n        </li>\r\n      );\r\n\r\n\r\n    return (\r\n      <div>\r\n        <ul className=\"list-group\">{list}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cases;\r\n"]},"metadata":{},"sourceType":"module"}